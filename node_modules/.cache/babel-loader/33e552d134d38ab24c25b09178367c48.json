{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\new-projects\\\\food-order-app\\\\src\\\\store\\\\auth-ctx.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext({\n  email: \"\",\n  password: \"\",\n  isLogin: false,\n  addEmail: () => {},\n  addPassword: () => {},\n  addLogin: () => {}\n});\nconst initAuthState = {\n  email: \"\",\n  password: \"\"\n};\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case \"EMAIL\":\n      return {\n        email: state.email,\n        password: \"\"\n      };\n\n    case \"PASSWORD\":\n      return {\n        email: \"\",\n        password: state.password\n      };\n\n    case \"LOGIN\":\n      return {\n        email: \"\",\n        password: \"\",\n        isLogin: true\n      };\n\n    default:\n      throw new Error(\"Something went wrong!\");\n  }\n};\n\nconst AuthProvider = props => {\n  _s();\n\n  const [authState, dispatchAuth] = useReducer(authReducer, initAuthState);\n\n  const addEmailHandler = email => {\n    dispatchAuth({\n      type: \"EMAIL\",\n      email\n    });\n  };\n\n  const addPasswordHandler = password => {\n    dispatchAuth({\n      type: \"PASSWORD\",\n      password\n    });\n  };\n\n  const addLoginHandler = loginInfo => {\n    dispatchAuth({\n      type: \"LOGIN\",\n      login: loginInfo\n    });\n  };\n\n  const authContext = {\n    email: authState.email,\n    password: authState.password,\n    isLogin: authState.isLogin,\n    addEmail: addEmailHandler,\n    addPassword: addPasswordHandler,\n    addLogin: addLoginHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"gyLRHIM+XRBCNcLw/eTdEkfcJV8=\");\n\n_c = AuthProvider;\nexport default AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useReducer","AuthContext","createContext","email","password","isLogin","addEmail","addPassword","addLogin","initAuthState","authReducer","state","action","type","Error","AuthProvider","props","authState","dispatchAuth","addEmailHandler","addPasswordHandler","addLoginHandler","loginInfo","login","authContext","children"],"sources":["C:/Users/HP/Desktop/new-projects/food-order-app/src/store/auth-ctx.js"],"sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nexport const AuthContext = React.createContext({\r\n  email: \"\",\r\n  password: \"\",\r\n  isLogin: false,\r\n  addEmail: () => {},\r\n  addPassword: () => {},\r\n  addLogin: () => {},\r\n});\r\n\r\nconst initAuthState = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"EMAIL\":\r\n      return { email: state.email, password: \"\" };\r\n    case \"PASSWORD\":\r\n      return { email: \"\", password: state.password };\r\n    case \"LOGIN\":\r\n      return { email: \"\", password: \"\", isLogin: true };\r\n    default:\r\n      throw new Error(\"Something went wrong!\");\r\n  }\r\n};\r\n\r\nconst AuthProvider = (props) => {\r\n  const [authState, dispatchAuth] = useReducer(authReducer, initAuthState);\r\n\r\n  const addEmailHandler = (email) => {\r\n    dispatchAuth({ type: \"EMAIL\", email });\r\n  };\r\n\r\n  const addPasswordHandler = (password) => {\r\n    dispatchAuth({ type: \"PASSWORD\", password });\r\n  };\r\n\r\n  const addLoginHandler = (loginInfo) => {\r\n    dispatchAuth({ type: \"LOGIN\", login: loginInfo});\r\n  };\r\n\r\n  const authContext = {\r\n    email: authState.email,\r\n    password: authState.password,\r\n    isLogin: authState.isLogin,\r\n    addEmail: addEmailHandler,\r\n    addPassword: addPasswordHandler,\r\n    addLogin: addLoginHandler,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={authContext}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;EAC7CC,KAAK,EAAE,EADsC;EAE7CC,QAAQ,EAAE,EAFmC;EAG7CC,OAAO,EAAE,KAHoC;EAI7CC,QAAQ,EAAE,MAAM,CAAE,CAJ2B;EAK7CC,WAAW,EAAE,MAAM,CAAE,CALwB;EAM7CC,QAAQ,EAAE,MAAM,CAAE;AAN2B,CAApB,CAApB;AASP,MAAMC,aAAa,GAAG;EACpBN,KAAK,EAAE,EADa;EAEpBC,QAAQ,EAAE;AAFU,CAAtB;;AAKA,MAAMM,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,OAAL;MACE,OAAO;QAAEV,KAAK,EAAEQ,KAAK,CAACR,KAAf;QAAsBC,QAAQ,EAAE;MAAhC,CAAP;;IACF,KAAK,UAAL;MACE,OAAO;QAAED,KAAK,EAAE,EAAT;QAAaC,QAAQ,EAAEO,KAAK,CAACP;MAA7B,CAAP;;IACF,KAAK,OAAL;MACE,OAAO;QAAED,KAAK,EAAE,EAAT;QAAaC,QAAQ,EAAE,EAAvB;QAA2BC,OAAO,EAAE;MAApC,CAAP;;IACF;MACE,MAAM,IAAIS,KAAJ,CAAU,uBAAV,CAAN;EARJ;AAUD,CAXD;;AAaA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,UAAU,CAACU,WAAD,EAAcD,aAAd,CAA5C;;EAEA,MAAMU,eAAe,GAAIhB,KAAD,IAAW;IACjCe,YAAY,CAAC;MAAEL,IAAI,EAAE,OAAR;MAAiBV;IAAjB,CAAD,CAAZ;EACD,CAFD;;EAIA,MAAMiB,kBAAkB,GAAIhB,QAAD,IAAc;IACvCc,YAAY,CAAC;MAAEL,IAAI,EAAE,UAAR;MAAoBT;IAApB,CAAD,CAAZ;EACD,CAFD;;EAIA,MAAMiB,eAAe,GAAIC,SAAD,IAAe;IACrCJ,YAAY,CAAC;MAAEL,IAAI,EAAE,OAAR;MAAiBU,KAAK,EAAED;IAAxB,CAAD,CAAZ;EACD,CAFD;;EAIA,MAAME,WAAW,GAAG;IAClBrB,KAAK,EAAEc,SAAS,CAACd,KADC;IAElBC,QAAQ,EAAEa,SAAS,CAACb,QAFF;IAGlBC,OAAO,EAAEY,SAAS,CAACZ,OAHD;IAIlBC,QAAQ,EAAEa,eAJQ;IAKlBZ,WAAW,EAAEa,kBALK;IAMlBZ,QAAQ,EAAEa;EANQ,CAApB;EAQA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEG,WAA7B;IAAA,UACGR,KAAK,CAACS;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA5BD;;GAAMV,Y;;KAAAA,Y;AA8BN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}